version: '3.8'

services:
  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    image: erekysy/finance_tracker-client:latest
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - my_network

  api:
    build:
      context: .
      dockerfile: server/Dockerfile
    image: erekysy/finance_tracker-api:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DefaultConnection=${DB_CONNECTION_STRING}
    ports:
      - "5000:80"
    depends_on:
      sql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s
    networks:
      - my_network
    command: ["bash", "-c", "dotnet ef database update --project /app/server/API/API.csproj && dotnet API.dll"]

  sql:
    image: mcr.microsoft.com/azure-sql-edge
    environment:
      ACCEPT_EULA: "1"
      SA_PASSWORD: ${SA_PASSWORD}  
    ports:
      - "1433:1433"  
    volumes:
      - sql-data:/var/opt/mssql  
      - ./server/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql 
      - ./server/init-db.sh:/init-db.sh  
    entrypoint: /bin/bash /init-db.sh
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S sql -U sa -P \"$SA_PASSWORD\" -Q \"SELECT 1\""]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  sql-data:

networks:
  my_network:
    driver: bridge